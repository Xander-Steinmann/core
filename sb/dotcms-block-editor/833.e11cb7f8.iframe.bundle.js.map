{"version":3,"file":"833.e11cb7f8.iframe.bundle.js","mappings":"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","sources":["./dist/libs/dotcms-webcomponents/dist/esm/key-value-form_2.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-27076004.js';\n\nconst keyValueFormCss = \"key-value-form form label{align-items:center;display:flex;flex-grow:1}key-value-form form table{width:100%}key-value-form form table input{width:100%}key-value-form form .key-value-table-form__key{width:45%}key-value-form form .key-value-table-form__value{width:45%}key-value-form form .key-value-table-form__action{text-align:right;width:10%}\";\n\nconst DEFAULT_VALUE = { key: '', value: '' };\nconst DotKeyValueComponent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.add = createEvent(this, \"add\", 7);\n    this.keyChanged = createEvent(this, \"keyChanged\", 7);\n    this.lostFocus = createEvent(this, \"lostFocus\", 7);\n    /** (optional) Disables all form interaction */\n    this.disabled = false;\n    /** (optional) Label for the add item button */\n    this.addButtonLabel = 'Add';\n    /** (optional) Placeholder for the key input text */\n    this.keyPlaceholder = '';\n    /** (optional) Placeholder for the value input text */\n    this.valuePlaceholder = '';\n    /** (optional) The string to use in the key input label */\n    this.keyLabel = 'Key';\n    /** (optional) The string to use in the value input label */\n    this.valueLabel = 'Value';\n    /** (optional) Label for the empty option in white-list select */\n    this.emptyDropdownOptionLabel = 'Pick an option';\n    /** (optional) The string to use for white-list key/values */\n    this.whiteList = '';\n    this.inputs = Object.assign({}, DEFAULT_VALUE);\n    this.selectedWhiteListKey = '';\n    this.whiteListArray = {};\n  }\n  selectedWhiteListKeyWatch() {\n    /* */\n  }\n  componentWillLoad() {\n    this.whiteListArray = this.whiteList.length ? JSON.parse(this.whiteList) : '';\n  }\n  render() {\n    const buttonDisabled = this.isButtonDisabled();\n    return (h(\"form\", { onSubmit: this.addKey.bind(this) }, h(\"table\", null, h(\"tbody\", null, h(\"tr\", null, h(\"td\", { class: \"key-value-table-form__key\" }, h(\"label\", null, this.keyLabel)), h(\"td\", { class: \"key-value-table-form__value\" }, h(\"label\", null, this.valueLabel)), h(\"td\", { class: \"key-value-table-form__action\" })), Object.keys(this.whiteListArray).length === 0\n      ? this.getKeyValueForm(buttonDisabled)\n      : this.getWhiteListForm(buttonDisabled)))));\n  }\n  getKeyValueForm(buttonDisabled) {\n    return (h(\"tr\", null, h(\"td\", { class: \"key-value-table-form__key\" }, h(\"input\", { disabled: this.disabled, name: \"key\", onBlur: (e) => this.lostFocus.emit(e), onInput: (event) => this.setValue(event), placeholder: this.keyPlaceholder, type: \"text\", value: this.inputs.key })), h(\"td\", { class: \"key-value-table-form__value\" }, h(\"input\", { disabled: this.disabled, name: \"value\", onBlur: (e) => this.lostFocus.emit(e), onInput: (event) => this.setValue(event), placeholder: this.valuePlaceholder, type: \"text\", value: this.inputs.value })), h(\"td\", { class: \"key-value-table-form__action\" }, h(\"button\", { class: \"key-value-form__save__button\", type: \"submit\", disabled: buttonDisabled }, this.addButtonLabel))));\n  }\n  getWhiteListForm(buttonDisabled) {\n    return (h(\"tr\", null, h(\"td\", { class: \"key-value-table-form__key\" }, this.getWhiteListKeysDropdown()), h(\"td\", { class: \"key-value-table-form__value\" }, this.selectedWhiteListKey ? this.getWhiteListValueControl() : null), h(\"td\", { class: \"key-value-table-form__action\" }, h(\"button\", { class: \"key-value-form__save__button\", type: \"submit\", disabled: buttonDisabled }, this.addButtonLabel))));\n  }\n  getWhiteListValueControl() {\n    return this.whiteListArray[this.selectedWhiteListKey].length ? (this.getWhiteListValuesDropdown()) : (h(\"input\", { disabled: this.disabled, name: \"value\", onBlur: (e) => this.lostFocus.emit(e), onInput: (event) => this.setValue(event), placeholder: this.valuePlaceholder, type: \"text\", value: this.inputs.value }));\n  }\n  getWhiteListKeysDropdown() {\n    return (h(\"select\", { disabled: this.disabled, name: \"key\", onChange: (event) => this.changeWhiteListKey(event) }, h(\"option\", { value: \"\" }, this.emptyDropdownOptionLabel), Object.keys(this.whiteListArray).map((key) => {\n      return h(\"option\", { value: key }, key);\n    })));\n  }\n  getWhiteListValuesDropdown() {\n    return (h(\"select\", { disabled: this.disabled, name: \"value\", onChange: (event) => this.changeWhiteListValue(event) }, h(\"option\", { value: \"\" }, this.emptyDropdownOptionLabel), this.whiteListArray[this.selectedWhiteListKey].map((item) => {\n      return h(\"option\", { value: item }, item);\n    })));\n  }\n  changeWhiteListKey(event) {\n    event.stopImmediatePropagation();\n    this.clearForm();\n    const target = event.target;\n    this.selectedWhiteListKey = target.value;\n    this.setValue(event);\n  }\n  changeWhiteListValue(event) {\n    event.stopImmediatePropagation();\n    this.setValue(event);\n  }\n  isButtonDisabled() {\n    return !this.isFormValid() || this.disabled || null;\n  }\n  isFormValid() {\n    return !!(this.inputs.key.length && this.inputs.value.length);\n  }\n  setValue(event) {\n    event.stopImmediatePropagation();\n    const target = event.target;\n    if (target.name === 'key') {\n      this.keyChanged.emit(target.value.toString());\n    }\n    this.inputs = Object.assign(Object.assign({}, this.inputs), { [target.name]: target.value.toString() });\n  }\n  addKey(event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    if (this.inputs.key && this.inputs.value) {\n      this.add.emit(this.inputs);\n      this.clearForm();\n      this.focusKeyInputField();\n    }\n  }\n  clearForm() {\n    this.inputs = Object.assign({}, DEFAULT_VALUE);\n  }\n  focusKeyInputField() {\n    const input = this.el.querySelector('[name=\"key\"]');\n    input.focus();\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"selectedWhiteListKey\": [\"selectedWhiteListKeyWatch\"]\n  }; }\n};\nDotKeyValueComponent.style = keyValueFormCss;\n\nconst keyValueTableCss = \"key-value-table table{width:100%}key-value-table table td{line-height:3rem}key-value-table .key-value-table-wc__key{width:45%}key-value-table .key-value-table-wc__value{width:45%}key-value-table .key-value-table-wc__action{text-align:right;width:10%}key-value-table .key-value-table-wc__placeholder-transit{border-bottom:1px solid}\";\n\nconst KeyValueTableComponent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.delete = createEvent(this, \"delete\", 7);\n    this.reorder = createEvent(this, \"reorder\", 7);\n    /** (optional) Items to render in the list of key value */\n    this.items = [];\n    /** (optional) Disables all form interaction */\n    this.disabled = false;\n    /** (optional) Label for the delete button in each item list */\n    this.buttonLabel = 'Delete';\n    /** (optional) Message to show when the list of items is empty */\n    this.emptyMessage = 'No values';\n    this.dragSrcEl = null;\n  }\n  render() {\n    return (h(\"table\", null, h(\"tbody\", null, this.renderRows(this.items))));\n  }\n  componentDidLoad() {\n    this.bindDraggableEvents();\n  }\n  componentDidUpdate() {\n    this.bindDraggableEvents();\n  }\n  // D&D - BEGIN\n  bindDraggableEvents() {\n    if (!this.disabled) {\n      const rows = document.querySelectorAll('key-value-table tr');\n      rows.forEach((row) => {\n        row.setAttribute('draggable', 'true');\n        row.removeEventListener('dragstart', this.handleDragStart.bind(this), false);\n        row.removeEventListener('dragenter', this.handleDragEnter, false);\n        row.removeEventListener('dragover', this.handleDragOver.bind(this), false);\n        row.removeEventListener('dragleave', this.handleDragLeave, false);\n        row.removeEventListener('drop', this.handleDrop.bind(this), false);\n        row.removeEventListener('dragend', this.handleDragEnd.bind(this), false);\n        row.addEventListener('dragstart', this.handleDragStart.bind(this), false);\n        row.addEventListener('dragenter', this.handleDragEnter, false);\n        row.addEventListener('dragover', this.handleDragOver.bind(this), false);\n        row.addEventListener('dragleave', this.handleDragLeave, false);\n        row.addEventListener('drop', this.handleDrop.bind(this), false);\n        row.addEventListener('dragend', this.handleDragEnd.bind(this), false);\n      });\n    }\n  }\n  removeElementById(elemId) {\n    document.getElementById(elemId).remove();\n  }\n  isPlaceholderInDOM() {\n    return !!document.getElementById('dotKeyValuePlaceholder');\n  }\n  isCursorOnUpperSide(cursor, { top, bottom }) {\n    return cursor.y - top < (bottom - top) / 2;\n  }\n  setPlaceholder() {\n    const placeholder = document.createElement('tr');\n    placeholder.id = 'dotKeyValuePlaceholder';\n    placeholder.classList.add('key-value-table-wc__placeholder-transit');\n    return placeholder;\n  }\n  insertBeforeElement(newElem, element) {\n    element.parentNode.insertBefore(newElem, element);\n  }\n  insertAfterElement(newElem, element) {\n    element.parentNode.insertBefore(newElem, element.nextSibling);\n  }\n  handleDragStart(e) {\n    this.dragSrcEl = e.target;\n  }\n  handleDragOver(e) {\n    if (e.preventDefault) {\n      e.preventDefault();\n    }\n    if (this.dragSrcEl != e.target) {\n      const contentlet = e.target.closest('tr');\n      const contentletPlaceholder = this.setPlaceholder();\n      if (this.isPlaceholderInDOM()) {\n        this.removeElementById('dotKeyValuePlaceholder');\n      }\n      if (this.isCursorOnUpperSide(e, contentlet.getBoundingClientRect())) {\n        this.insertBeforeElement(contentletPlaceholder, contentlet);\n      }\n      else {\n        this.insertAfterElement(contentletPlaceholder, contentlet);\n      }\n    }\n    return false;\n  }\n  handleDragEnter(e) {\n    e.target.classList.add('over');\n  }\n  handleDragLeave(e) {\n    e.target.classList.remove('over');\n  }\n  handleDrop(e) {\n    if (e.stopPropagation) {\n      e.stopPropagation(); // stops the browser from redirecting.\n    }\n    if (this.dragSrcEl != e.target) {\n      document\n        .getElementById('dotKeyValuePlaceholder')\n        .insertAdjacentElement('afterend', this.dragSrcEl);\n    }\n    return false;\n  }\n  handleDragEnd() {\n    const rows = document.querySelectorAll('key-value-table tr');\n    rows.forEach(function (row) {\n      row.classList.remove('over');\n    });\n    try {\n      this.removeElementById('dotKeyValuePlaceholder');\n    }\n    catch (e) {\n      /**/\n    }\n    this.reorder.emit();\n  }\n  // D&D - END\n  onDelete(index) {\n    this.delete.emit(index);\n  }\n  getRow(item, index) {\n    const label = `${this.buttonLabel} ${item.key}, ${item.value}`;\n    return (h(\"tr\", null, h(\"td\", { class: \"key-value-table-wc__key\" }, item.key), h(\"td\", { class: \"key-value-table-wc__value\" }, item.value), h(\"td\", { class: \"key-value-table-wc__action\" }, !this.disabled ? this.getDeleteButton(label, index) : '')));\n  }\n  getDeleteButton(label, index) {\n    return (h(\"button\", { \"aria-label\": label, onClick: () => this.onDelete(index), class: \"dot-key-value__delete-button\" }, this.buttonLabel));\n  }\n  renderRows(items) {\n    return this.isValidItems(items)\n      ? items.map((item, index) => this.getRow(item, index))\n      : this.getEmptyRow();\n  }\n  getEmptyRow() {\n    return (h(\"tr\", null, h(\"td\", null, this.emptyMessage)));\n  }\n  isValidItems(items) {\n    return Array.isArray(items) && !!items.length;\n  }\n};\nKeyValueTableComponent.style = keyValueTableCss;\n\nexport { DotKeyValueComponent as key_value_form, KeyValueTableComponent as key_value_table };\n"],"names":["DEFAULT_VALUE","key","value","DotKeyValueComponent","hostRef","_classCallCheck","registerInstance","this","add","createEvent","keyChanged","lostFocus","disabled","addButtonLabel","keyPlaceholder","valuePlaceholder","keyLabel","valueLabel","emptyDropdownOptionLabel","whiteList","inputs","Object","assign","selectedWhiteListKey","whiteListArray","_createClass","selectedWhiteListKeyWatch","componentWillLoad","length","JSON","parse","render","buttonDisabled","isButtonDisabled","h","onSubmit","addKey","bind","class","keys","getKeyValueForm","getWhiteListForm","name","onBlur","e","_this","emit","onInput","event","setValue","placeholder","type","getWhiteListKeysDropdown","getWhiteListValueControl","getWhiteListValuesDropdown","_this2","onChange","_this3","changeWhiteListKey","map","_this4","changeWhiteListValue","item","stopImmediatePropagation","clearForm","target","isFormValid","toString","preventDefault","focusKeyInputField","el","querySelector","focus","get","getElement","style","KeyValueTableComponent","reorder","items","buttonLabel","emptyMessage","dragSrcEl","renderRows","componentDidLoad","bindDraggableEvents","componentDidUpdate","document","querySelectorAll","forEach","row","setAttribute","removeEventListener","_this5","handleDragStart","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","handleDragEnd","addEventListener","removeElementById","elemId","getElementById","remove","isPlaceholderInDOM","isCursorOnUpperSide","cursor","top","bottom","y","setPlaceholder","createElement","id","classList","insertBeforeElement","newElem","element","parentNode","insertBefore","insertAfterElement","nextSibling","contentlet","closest","contentletPlaceholder","getBoundingClientRect","stopPropagation","insertAdjacentElement","onDelete","index","getRow","label","getDeleteButton","onClick","_this6","isValidItems","_this7","getEmptyRow","Array","isArray"],"sourceRoot":"webpack:///"}