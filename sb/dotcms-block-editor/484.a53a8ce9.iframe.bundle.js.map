{"version":3,"file":"484.a53a8ce9.iframe.bundle.js","mappings":"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","sources":["./dist/libs/dotcms-webcomponents/dist/esm/dot-input-calendar.entry.js","./dist/libs/dotcms-webcomponents/dist/esm/utils-0044bfa9.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-27076004.js';\nimport { g as getOriginalStatus, j as getErrorClass, k as getId, u as updateStatus } from './utils-0044bfa9.js';\n\nconst dotInputCalendarCss = \"dot-input-calendar{display:flex}dot-input-calendar input{flex-grow:1}\";\n\nconst DotInputCalendarComponent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this._dotValueChange = createEvent(this, \"_dotValueChange\", 7);\n    this._dotStatusChange = createEvent(this, \"_dotStatusChange\", 7);\n    /** Value specifies the value of the input element */\n    this.value = '';\n    /** Name that will be used as ID */\n    this.name = '';\n    /** (optional) Determine if it is mandatory */\n    this.required = false;\n    /** (optional) Disables field's interaction */\n    this.disabled = false;\n    /** (optional) Min, minimum value that the field will allow to set, expect a Date Format. */\n    this.min = '';\n    /** (optional) Max, maximum value that the field will allow to set, expect a Date Format */\n    this.max = '';\n    /** (optional) Step specifies the legal number intervals for the input field */\n    this.step = '1';\n    /** type specifies the type of input element to display */\n    this.type = '';\n  }\n  /**\n   * Reset properties of the field, clear value and emit events.\n   */\n  async reset() {\n    this.value = '';\n    this.status = getOriginalStatus(this.isValid());\n    this.emitValueChange();\n    this.emitStatusChange();\n  }\n  componentWillLoad() {\n    this.status = getOriginalStatus(this.isValid());\n    this.emitStatusChange();\n  }\n  render() {\n    return (h(\"input\", { class: getErrorClass(this.status.dotValid), disabled: this.disabled || null, id: getId(this.name), onBlur: () => this.blurHandler(), onInput: (event) => this.setValue(event), required: this.required || null, type: this.type, min: this.min, max: this.max, step: this.step, value: this.value }));\n  }\n  isValid() {\n    return this.isValueInRange() && this.isRequired();\n  }\n  isRequired() {\n    return this.required ? !!this.value : true;\n  }\n  isValueInRange() {\n    return this.isInMaxRange() && this.isInMinRange();\n  }\n  isInMinRange() {\n    return !!this.min ? this.value >= this.min : true;\n  }\n  isInMaxRange() {\n    return !!this.max ? this.value <= this.max : true;\n  }\n  blurHandler() {\n    if (!this.status.dotTouched) {\n      this.status = updateStatus(this.status, {\n        dotTouched: true\n      });\n      this.emitStatusChange();\n    }\n  }\n  setValue(event) {\n    this.value = event.target.value.toString();\n    this.status = updateStatus(this.status, {\n      dotTouched: true,\n      dotPristine: false,\n      dotValid: this.isValid()\n    });\n    this.emitValueChange();\n    this.emitStatusChange();\n  }\n  emitStatusChange() {\n    this._dotStatusChange.emit({\n      name: this.name,\n      status: this.status,\n      isValidRange: this.isValueInRange()\n    });\n  }\n  emitValueChange() {\n    this._dotValueChange.emit({\n      name: this.name,\n      value: this.formattedValue()\n    });\n  }\n  formattedValue() {\n    return this.value.length === 5 ? `${this.value}:00` : this.value;\n  }\n  get el() { return getElement(this); }\n};\nDotInputCalendarComponent.style = dotInputCalendarCss;\n\nexport { DotInputCalendarComponent as dot_input_calendar };\n","import { h } from './index-27076004.js';\n\nfunction nextTick(fn) {\n  const id = window.requestAnimationFrame(function () {\n    fn && fn();\n    window.cancelAnimationFrame(id);\n  });\n}\n/**\n * Returns CSS classes object based on field Status values\n *\n * @param DotFieldStatus status\n * @param boolean isValid\n * @param boolean [required]\n * @returns DotFieldStatusClasses\n */\nfunction getClassNames(status, isValid, required) {\n  return {\n    'dot-valid': isValid,\n    'dot-invalid': !isValid,\n    'dot-pristine': status.dotPristine,\n    'dot-dirty': !status.dotPristine,\n    'dot-touched': status.dotTouched,\n    'dot-untouched': !status.dotTouched,\n    'dot-required': required\n  };\n}\n/**\n * Returns if it is a valid string\n *\n * @param string val\n * @returns boolean\n */\nfunction isStringType(val) {\n  return typeof val === 'string' && !!val;\n}\n/**\n * Based on a string formatted with comma separated values, returns a label/value DotOption array\n *\n * @param string rawString\n * @returns DotOption[]\n */\nfunction getDotOptionsFromFieldValue(rawString) {\n  if (!isStringType(rawString)) {\n    return [];\n  }\n  rawString = rawString.replace(/(?:\\\\[rn]|[\\r\\n]+)+/g, ',');\n  const items = isKeyPipeValueFormatValid(rawString)\n    ? rawString\n      .split(',')\n      .filter((item) => !!item.length)\n      .map((item) => {\n      const [label, value] = item.split('|');\n      return { label, value };\n    })\n    : [];\n  return items;\n}\n/**\n * Returns CSS class error to be set on main custom field\n *\n * @param boolean valid\n * @returns string\n */\nfunction getErrorClass(valid) {\n  return valid ? undefined : 'dot-field__error';\n}\n/**\n * Prefix the hint for the id param\n *\n * @param string name\n * @returns string\n */\nfunction getHintId(name) {\n  const value = slugify(name);\n  return value ? `hint-${value}` : undefined;\n}\n/**\n * Return cleanup dot prefixed id\n *\n * @param string name\n * @returns string\n */\nfunction getId(name) {\n  const value = slugify(name);\n  return name ? `dot-${slugify(value)}` : undefined;\n}\n/**\n * Prefix the label for the id param\n *\n * @param string name\n * @returns string\n */\nfunction getLabelId(name) {\n  const value = slugify(name);\n  return value ? `label-${value}` : undefined;\n}\n/**\n * Returns initial field Status, with possibility to change Valid status when needed (reset value)\n *\n * @param boolean isValid\n * @returns DotFieldStatus\n */\nfunction getOriginalStatus(isValid) {\n  return {\n    dotValid: typeof isValid === 'undefined' ? true : isValid,\n    dotTouched: false,\n    dotPristine: true\n  };\n}\n/**\n * Returns a single string formatted as \"Key|Value\" separated with commas from a DotKeyValueField array\n *\n * @param DotKeyValueField[] values\n * @returns string\n */\nfunction getStringFromDotKeyArray(values) {\n  return values.map((item) => `${item.key}|${item.value}`).join(',');\n}\n/**\n * Returns a copy of field Status with new changes\n *\n * @param DotFieldStatus state\n * @param { [key: string]: boolean } change\n * @returns DotFieldStatus\n */\nfunction updateStatus(state, change) {\n  return Object.assign(Object.assign({}, state), change);\n}\n/**\n * Returns Error tag if \"show\" value equals true\n *\n * @param boolean show\n * @param string message\n * @returns JSX.Element\n */\nfunction getTagError(show, message) {\n  return show && isStringType(message) ? (h(\"span\", { class: \"dot-field__error-message\" }, message)) : null;\n}\n/**\n * Returns Hint tag if \"hint\" value defined\n *\n * @param string hint\n * @param string name\n * @returns JSX.Element\n */\nfunction getTagHint(hint) {\n  return isStringType(hint) ? (h(\"span\", { class: \"dot-field__hint\", id: getHintId(hint) }, hint)) : null;\n}\n/**\n * Check if an URL is valid.\n * @param string url\n *\n * @returns boolean\n */\nfunction isValidURL(url) {\n  try {\n    return !!new URL(url);\n  }\n  catch (e) {\n    return false;\n  }\n}\n/**\n * Check if the fileName extension is part of the allowed extensions\n *\n * @param string fileName\n * @param string[] allowedExtensions\n *\n * @returns boolean\n */\nfunction isFileAllowed(name, type, allowedExtensions) {\n  if (allowedExtensions === '') {\n    return true;\n  }\n  const fileExt = getFileExtension(name);\n  return !!allowedExtensions.split(',').find((allowedExt) => {\n    if (allowedExt === '*') {\n      return true;\n    }\n    // if we get something like image/*, audio/*\n    if (allowedExt.includes('/*')) {\n      const extType = allowedExt.split('/*').filter(Boolean).join(''); // get the first part\n      return type.includes(extType); // \"image/png\".includes(\"image\")\n    }\n    // check agains extensions like `.jpg,.png`\n    return allowedExt.includes(fileExt);\n  });\n}\nfunction getFileExtension(filename) {\n  return /(?:\\.([^.]+))?$/.exec(filename)[1];\n}\nfunction slugify(text) {\n  return text\n    ? text\n      .toString()\n      .toLowerCase()\n      .replace(/\\s+/g, '-') // Replace spaces with -\n      .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n      .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n      .replace(/^-+/, '') // Trim - from start of text\n      .replace(/-+$/, '') // Trim - from end of text\n    : null;\n}\nfunction isKeyPipeValueFormatValid(rawString) {\n  const regex = /([^|,]*)\\|([^|,]*)/;\n  const items = rawString.split(',');\n  let valid = true;\n  for (let i = 0, total = items.length; i < total; i++) {\n    if (!regex.test(items[i])) {\n      valid = false;\n      break;\n    }\n  }\n  return valid;\n}\n\nexport { getClassNames as a, getTagError as b, getTagHint as c, getStringFromDotKeyArray as d, isStringType as e, getDotOptionsFromFieldValue as f, getOriginalStatus as g, getHintId as h, isFileAllowed as i, getErrorClass as j, getId as k, isValidURL as l, getLabelId as m, nextTick as n, updateStatus as u };\n"],"names":["DotInputCalendarComponent","hostRef","_classCallCheck","registerInstance","this","_dotValueChange","createEvent","_dotStatusChange","value","name","required","disabled","min","max","step","type","_createClass","key","status","getOriginalStatus","isValid","emitValueChange","emitStatusChange","componentWillLoad","render","h","class","getErrorClass","dotValid","id","getId","onBlur","_this","blurHandler","onInput","event","setValue","isValueInRange","isRequired","isInMaxRange","isInMinRange","dotTouched","updateStatus","target","toString","dotPristine","emit","isValidRange","formattedValue","length","get","getElement","style","nextTick","fn","window","requestAnimationFrame","cancelAnimationFrame","getClassNames","isStringType","val","getDotOptionsFromFieldValue","rawString","isKeyPipeValueFormatValid","regex","items","split","valid","i","total","test","replace","filter","item","map","label","undefined","getHintId","slugify","getLabelId","getStringFromDotKeyArray","values","join","state","change","Object","assign","getTagError","show","message","getTagHint","hint","isValidURL","url","URL","e","isFileAllowed","allowedExtensions","fileExt","getFileExtension","filename","exec","find","allowedExt","includes","extType","Boolean","text","toLowerCase"],"sourceRoot":"webpack:///"}