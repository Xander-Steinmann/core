<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.dotcms</groupId>
        <artifactId>dotcms-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>dotcms-packaging</artifactId>

    <packaging>jar</packaging>

    <properties>
        <servlet.port>8080</servlet.port>
        <it-database.port>5432</it-database.port>
        <it-elasticsearch.port>9200</it-elasticsearch.port>
        <run-container>tomcat9x</run-container>
        <tomcat9.version>9.0.53</tomcat9.version>
        <tomcat-dist-folder>dotserver/tomcat-${tomcat9.version}</tomcat-dist-folder>
        <glowroot-dist-folder>bin</glowroot-dist-folder>
        <assembly-directory>${basedir}/target/dist</assembly-directory>
        <!-- todo move files into this module or create separate module containing files -->
        <bin-directory>${basedir}/../bin</bin-directory>
        <docs-directory>${basedir}../docs</docs-directory>
        <skipDockerEnv>true</skipDockerEnv>
        <skipITs>true</skipITs>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.dotcms</groupId>
            <artifactId>dotcms-core</artifactId>
            <type>war</type>
            <version>1.0.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.23</version>
        </dependency>
        <dependency>
            <groupId>com.impossibl.pgjdbc-ng</groupId>
            <artifactId>pgjdbc-ng</artifactId>
            <version>0.8.7</version>
        </dependency>

        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>3.4.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.glowroot</groupId>
            <artifactId>glowroot-agent</artifactId>
            <type>zip</type>
            <classifier>dist</classifier>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>


        <plugins>
            <plugin>
                <!-- Failsafe plugin runs integration tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>

                </configuration>
                <executions>
                    <execution>
                        <id>perform-it</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>servlet.port</name>
                                    <value>${servlet.port}</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify-it</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-base-assembly-tree</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <useBuildFilters>true</useBuildFilters>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <outputDirectory>${assembly-directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <filtering>true</filtering>
                                    <directory>${basedir}/src/main/distbase</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.dkanejs.maven.plugins</groupId>
                <artifactId>docker-compose-maven-plugin</artifactId>
                <configuration>

                    <!--  <envFile>${project.basedir}/.env</envFile>-->
                    <services>
                        <service>db</service>
                        <service>elasticsearch</service>
                    </services>
                    <removeVolumes>false</removeVolumes>
                    <projectName>cargo</projectName>
                    <removeImages>true</removeImages>
                    <removeImagesType>local</removeImagesType>
                    <skip>${skipDockerEnv}</skip>

                </configuration>

                <executions>
                    <execution>
                        <id>pull</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>pull</goal>
                        </goals>
                        <configuration>
                            <composeFile>${project.basedir}/../docker-compose.yml</composeFile>
                            <ignorePullFailures>true</ignorePullFailures>
                        </configuration>
                    </execution>
                    <execution>
                        <id>up</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>down</goal>
                            <goal>up</goal>
                        </goals>
                        <configuration>
                            <composeFile>${project.basedir}/../docker-compose.yml</composeFile>
                            <detachedMode>true</detachedMode>
                        </configuration>
                    </execution>
                    <execution>
                        <id>down</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>down</goal>
                        </goals>
                        <configuration>
                            <composeFile>${project.basedir}/../docker-compose.yml</composeFile>
                           <!-- <removeVolumes>true</removeVolumes> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven3-plugin</artifactId>
                <version>${cargo-maven3-plugin.version}</version>
                <configuration>
                    <skip>${skipITs}</skip>
                    <container>

                        <timeout>1800000</timeout>
                        <systemProperties>
                            <file.encoding>UTF-8</file.encoding>
                            <javax.xml.transform.TransformerFactory>
                                com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl
                            </javax.xml.transform.TransformerFactory>
                            <javax.xml.parsers.DocumentBuilderFactory>
                                com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl
                            </javax.xml.parsers.DocumentBuilderFactory>
                            <javax.xml.parsers.SAXParserFactory>
                                com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl
                            </javax.xml.parsers.SAXParserFactory>
                            <STARTER_DATA_LOAD>${project.build.directory}/starter/starter.zip</STARTER_DATA_LOAD>
                        </systemProperties>

                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                            </dependency>
                            <dependency>
                                <groupId>com.impossibl.pgjdbc-ng</groupId>
                                <artifactId>pgjdbc-ng</artifactId>
                            </dependency>
                        </dependencies>
                    </container>
                    <configuration>

                        <!--<home>${project.build.directory}/catalina-base</home>-->
                        <properties>
                            <!--    <cargo.servlet.port>${cargo.samples.servlet.port}</cargo.servlet.port>
                                <cargo.rmi.port>${cargo.samples.rmi.port}</cargo.rmi.port>
                                <cargo.tomcat.ajp.port>${cargo.samples.tomcat.ajp.port}</cargo.tomcat.ajp.port>
                          -->

                            <cargo.servlet.port>${servlet.port}</cargo.servlet.port>
                            <!---agentpath:/opt/jprofiler12/bin/linux-x64/libjprofilerti.so=port=8849 -->
                            <cargo.start.jvmargs>
                                --illegal-access=warn
                                --add-opens=java.base/java.lang=ALL-UNNAMED
                                --add-opens=java.base/java.io=ALL-UNNAMED
                                --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
                                   -Xdebug
                                   -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
                                   -Xnoagent
                                   -Djava.compiler=NONE
                               </cargo.start.jvmargs>
                        </properties>
                    </configuration>
                    <deployables>
                        <deployable>
                            <groupId>com.dotcms</groupId>
                            <artifactId>dotcms-core</artifactId>
                            <type>war</type>

                            <properties>
                                <context>ROOT</context>
                            </properties>
                            <pingUrlPath>/dotAdmin</pingUrlPath>
                        </deployable>
                    </deployables>
                    <packager>
                        <outputLocation>${assembly-directory}/dotserver/tomcat-${tomcat9.version}</outputLocation>
                    </packager>
                </configuration>
                <executions>

                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <container>
                                <timeout>3000000</timeout>
                            </container>
                            <skip>${skipITs}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <container>
                                <timeout>3000000</timeout>
                            </container>
                            <skip>${skipITs}</skip>
                        </configuration>
                    </execution>


                    <execution>
                        <id>package</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>configure</goal>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <tarLongFileMode>posix</tarLongFileMode>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>binary</id>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <overrideUid>0</overrideUid>
                            <overrideGid>0</overrideGid>
                            <descriptors>
                                <descriptor>src/assembly/descriptor.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                 <!--   <execution>
                        <id>unpack</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>dotcms-core</artifactId>
                                    <version>1.0.0-SNAPSHOT</version>
                                    <type>war</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/war</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>-->
                    <execution>
                        <id>copy-test-starter</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>starter</artifactId>
                                   <!-- <version>empty_20211007</version>-->
                                    <version>20210920</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/starter</outputDirectory>
                                    <destFileName>starter.zip</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-glowroot</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>starter</artifactId>
                                    <!-- <version>empty_20211007</version>-->
                                    <version>20210920</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/starter</outputDirectory>
                                    <destFileName>starter.zip</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>

            </plugin>


        </plugins>

    </build>
    <profiles>
        <profile>
            <id>jetty10x</id>
            <activation>

                <property>
                    <name>run-container</name>
                    <value>jetty10x</value>
                </property>

            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <version>${cargo-maven3-plugin.version}</version>
                            <configuration>
                                <container>
                                    <containerId>tomcat10x</containerId>
                                    <zipUrlInstaller>
                                        <url>
                                            https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/10.0.8/tomcat-10.0.8.zip  </url>
                                    </zipUrlInstaller>
                                </container>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>tomcat9x</id>
            <activation>

                <property>
                    <name>!run-container</name>

                </property>

            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <version>${cargo-maven3-plugin.version}</version>
                            <configuration>
                                <configuration>
                                    <type>standalone</type>
                                    <configfiles>
                                        <configfile>
                                            <file>${project.basedir}/src/main/tomcat9/bin/setenv.sh</file>
                                            <todir>bin</todir>
                                        </configfile>
                                    </configfiles>
                                </configuration>
                                <container>
                                    <containerId>tomcat9x</containerId>
                                    <timeout>1800000</timeout>
                                    <zipUrlInstaller>
                                        <url>
                                               https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/9.0.53/tomcat-9.0.53.zip
                                        </url>
                                    </zipUrlInstaller>

                                    <!--
                                    <systemProperties>
                                        <file.encoding>UTF-8</file.encoding>
                                        <javax.xml.transform.TransformerFactory>
                                            com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl
                                        </javax.xml.transform.TransformerFactory>
                                        <javax.xml.parsers.DocumentBuilderFactory>
                                            com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl
                                        </javax.xml.parsers.DocumentBuilderFactory>
                                        <javax.xml.parsers.SAXParserFactory>
                                            com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl
                                        </javax.xml.parsers.SAXParserFactory>
                                        <STARTER_DATA_LOAD>${project.build.directory}/starter/starter.zip</STARTER_DATA_LOAD>
                                    </systemProperties>
                                    -->
                                </container>

                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>tomcat9x-embedded</id>
            <activation>

                <property>
                    <name>run-container</name>
                    <value>tomcat9x-embedded</value>
                </property>

            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <version>${cargo-maven3-plugin.version}</version>
                            <configuration>
                                <configuration>
                                    <type>embedded</type>
                                    <configfiles>
                                        <configfile>
                                            <file>${project.basedir}/src/main/tomcat9/bin/setenv.sh</file>
                                            <todir>bin</todir>
                                        </configfile>
                                    </configfiles>
                                </configuration>
                                <container>
                                    <containerId>tomcat9x</containerId>
                                    <timeout>1800000</timeout>
                                    <type>embedded</type>
                                    <zipUrlInstaller>
                                        <url>
                                            https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/9.0.53/tomcat-9.0.53.zip
                                        </url>
                                    </zipUrlInstaller>

                                    <!--
                                    <systemProperties>
                                        <file.encoding>UTF-8</file.encoding>
                                        <javax.xml.transform.TransformerFactory>
                                            com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl
                                        </javax.xml.transform.TransformerFactory>
                                        <javax.xml.parsers.DocumentBuilderFactory>
                                            com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl
                                        </javax.xml.parsers.DocumentBuilderFactory>
                                        <javax.xml.parsers.SAXParserFactory>
                                            com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl
                                        </javax.xml.parsers.SAXParserFactory>
                                        <STARTER_DATA_LOAD>${project.build.directory}/starter/starter.zip</STARTER_DATA_LOAD>
                                    </systemProperties>
                                    -->
                                </container>

                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>jetty9x</id>
            <activation>
                <property>
                    <name>run-container</name>
                    <value>tomcat9x</value>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <configuration>
                                <container>
                                    <containerId>jetty9x</containerId>
                                    <artifactInstaller>
                                        <groupId>org.eclipse.jetty</groupId>
                                        <artifactId>jetty-home</artifactId>
                                        <version>9.4.38.v20210224</version>
                                    </artifactInstaller>
                                </container>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

</project>
