name: core-tests
on:
  pull_request:
  push:
    branches:
      - master
      - release-*
jobs:
  module-matcher-job:
    name: Module Matcher
    runs-on: ubuntu-latest
    outputs:
      module_found: ${{ steps.module-matcher.outputs.module_found }}
    steps:
      - id: fetch-core
        name: Fetch Core repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: module-matcher
        name: Module Matcher
        uses: ./.github/actions/module-matcher
        with:
          current: core
  build-core-job:
    name: Build Core
    runs-on: ubuntu-latest
    env:
      DEBUG: true
    outputs:
      cache_metadata: ${{ steps.cache-core.outputs.cache_metadata }}
    steps:
      - id: fetch-core
        name: Fetch Core repo
        uses: actions/checkout@v3
      - id: read-cicd-local-env
        name: Read CICD local library
        run: source ${GITHUB_WORKSPACE}/cicd/local-env.sh
        if: success()
      - id: build-core
        name: Build Core
        uses: ./.github/actions/build-core
        with:
          build_env: ${{ env.BUILD_ENV }}
        if: success()
      - id: core-cache-locator
        name: Core Cache Locator
        uses: ./.github/actions/core-cache-locator
        with:
          build_env: ${{ env.BUILD_ENV }}
        if: success()
      - id: cache-core
        name: Cache Core
        uses: ./.github/actions/cache-core
        with:
          build_env: ${{ env.BUILD_ENV }}
          cache_locations: ${{ steps.core-cache-locator.outputs.cache_locations }}
        if: success()
  run-unit-tests-job:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build-core-job
    if: success()
    steps:
      - id: fetch-core
        name: Fetch Core Repo
        uses: actions/checkout@v3
      - id: read-cicd-local-env
        name: Read CICD local library
        run: source ${GITHUB_WORKSPACE}/cicd/local-env.sh
        if: success()
      - id: restore-core
        name: Restore Core Cache
        uses: ./.github/actions/restore-core
        with:
          cache_metadata: ${{ needs.build-core-job.outputs.cache_metadata }}
        if: success()
      - id: run-unit-tests
        name: Run Unit Tests
        uses: ./.github/actions/run-unit-tests
        with:
          build_env: ${{ env.BUILD_ENV }}
      - id: unit-tests-results
        name: Unit Tests Results
        uses: dorny/test-reporter@v1
        with:
          name: Unit Test Results
          path: ${{ steps.run-unit-tests.outputs.tests-results-location }}/*.xml
          reporter: java-junit
          max-annotations: 50
          fail-on-error: false
        if: always() && steps.run-unit-tests.outputs.skip-results-report == 'false'
      - id: unit-tests-comment
        name: Unit Test Comment
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: ${{ steps.run-unit-tests.outputs.tests-results-location }}/*.xml
          check_name: 'Unit Tests Report'
        if: always() && steps.run-unit-tests.outputs.skip-results-report == 'false'
      - id: publish-unit-tests
        name: Publish Unit Tests
        uses: ./.github/actions/publish-test-results
        with:
          build_id: ${{ env.BUILD_ID }}
          build_hash: ${{ env.BUILD_HASH }}
          test_type: unit
          pull_request: ${{ github.event.number }}
          tests_run_exit_code: ${{ steps.run-unit-tests.outputs.tests-run-exit-code }}
          test_results_location: ${{ steps.run-unit-tests.outputs.tests-results-location }}/html
          cicd_github_token: ${{ secrets.CICD_GITHUB_TOKEN }}
        if: always() && steps.run-unit-tests.outputs.skip-results-report == 'false'
      - id: github-status
        name: Send Github Status
        uses: ./.github/actions/github-status
        with:
          test_type: unit
          test_results_status: ${{ steps.run-unit-tests.outputs.tests-results-status }}
          pull_request: ${{ github.event.number }}
          github_user: ${{ env.GITHUB_USER }}
          cicd_github_token: ${{ secrets.CICD_GITHUB_TOKEN }}
          report_url: ${{ steps.publish-unit-tests.outputs.test_results_commit_url }}
        if: always() && steps.run-unit-tests.outputs.skip-results-report == 'false'
